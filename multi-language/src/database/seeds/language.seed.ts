import * as dotenv from 'dotenv';
import { LanguageEntity } from 'src/modules/languages/entity/language.entity';
import { DataSource } from 'typeorm';
import { Seeder } from 'typeorm-extension';
dotenv.config();
export class LanguageSeed implements Seeder {
  static languages: any[] = [
    { language: 'Afrikaans', languageCode: 'af', nativeName: 'Afrikaans' },
    { language: 'Albanian', languageCode: 'sq', nativeName: 'Shqip' },
    { language: 'Amharic', languageCode: 'am', nativeName: 'አማርኛ' },
    { language: 'Arabic', languageCode: 'ar', nativeName: 'العربية' },
    { language: 'Armenian', languageCode: 'hy', nativeName: 'Հայերեն' },
    {
      language: 'Azerbaijani',
      languageCode: 'az',
      nativeName: 'Azərbaycan dili',
    },
    { language: 'Basque', languageCode: 'eu', nativeName: 'Euskara' },
    { language: 'Belarusian', languageCode: 'be', nativeName: 'Беларуская' },
    { language: 'Bengali', languageCode: 'bn', nativeName: 'বাংলা' },
    { language: 'Bosnian', languageCode: 'bs', nativeName: 'Bosanski' },
    { language: 'Bulgarian', languageCode: 'bg', nativeName: 'Български' },
    { language: 'Catalan', languageCode: 'ca', nativeName: 'Català' },
    { language: 'Cebuano', languageCode: 'ceb', nativeName: 'Binisaya' },
    { language: 'Chinese', languageCode: 'zh', nativeName: '中文' },
    { language: 'Corsican', languageCode: 'co', nativeName: 'Corsu' },
    { language: 'Croatian', languageCode: 'hr', nativeName: 'Hrvatski' },
    { language: 'Czech', languageCode: 'cs', nativeName: 'Čeština' },
    { language: 'Danish', languageCode: 'da', nativeName: 'Dansk' },
    { language: 'Dutch', languageCode: 'nl', nativeName: 'Nederlands' },
    { language: 'English', languageCode: 'en', nativeName: 'English' },
    { language: 'Esperanto', languageCode: 'eo', nativeName: 'Esperanto' },
    { language: 'Estonian', languageCode: 'et', nativeName: 'Eesti' },
    { language: 'Finnish', languageCode: 'fi', nativeName: 'Suomi' },
    { language: 'French', languageCode: 'fr', nativeName: 'Français' },
    { language: 'Galician', languageCode: 'gl', nativeName: 'Galego' },
    { language: 'Georgian', languageCode: 'ka', nativeName: 'ქართული' },
    { language: 'German', languageCode: 'de', nativeName: 'Deutsch' },
    { language: 'Greek', languageCode: 'el', nativeName: 'Ελληνικά' },
    { language: 'Gujarati', languageCode: 'gu', nativeName: 'ગુજરાતી' },
    {
      language: 'Haitian Creole',
      languageCode: 'ht',
      nativeName: 'Kreyòl ayisyen',
    },
    { language: 'Hausa', languageCode: 'ha', nativeName: 'Hausa' },
    {
      language: 'Hawaiian',
      languageCode: 'haw',
      nativeName: 'ʻŌlelo Hawaiʻi',
    },
    { language: 'Hebrew', languageCode: 'he', nativeName: 'עברית' },
    { language: 'Hindi', languageCode: 'hi', nativeName: 'हिंदी' },
    { language: 'Hungarian', languageCode: 'hu', nativeName: 'Magyar' },
    { language: 'Icelandic', languageCode: 'is', nativeName: 'Íslenska' },
    { language: 'Igbo', languageCode: 'ig', nativeName: 'Asụsụ Igbo' },
    {
      language: 'Indonesian',
      languageCode: 'id',
      nativeName: 'Bahasa Indonesia',
    },
    { language: 'Irish', languageCode: 'ga', nativeName: 'Gaeilge' },
    { language: 'Italian', languageCode: 'it', nativeName: 'Italiano' },
    { language: 'Japanese', languageCode: 'ja', nativeName: '日本語' },
    { language: 'Javanese', languageCode: 'jv', nativeName: 'Basa Jawa' },
    { language: 'Kannada', languageCode: 'kn', nativeName: 'ಕನ್ನಡ' },
    { language: 'Kazakh', languageCode: 'kk', nativeName: 'Қазақ тілі' },
    { language: 'Khmer', languageCode: 'km', nativeName: 'ខ្មែរ' },
    {
      language: 'Kinyarwanda',
      languageCode: 'rw',
      nativeName: 'Ikinyarwanda',
    },
    { language: 'Korean', languageCode: 'ko', nativeName: '한국어' },
    { language: 'Kurdish', languageCode: 'ku', nativeName: 'Kurmancî' },
    { language: 'Kyrgyz', languageCode: 'ky', nativeName: 'Кыргызча' },
    { language: 'Lao', languageCode: 'lo', nativeName: 'ລາວ' },
    { language: 'Latin', languageCode: 'la', nativeName: 'Latina' },
    {
      language: 'Latvian',
      languageCode: 'lv',
      nativeName: 'Latviešu valoda',
    },
    { language: 'Lithuanian', languageCode: 'lt', nativeName: 'Lietuvių' },
    {
      language: 'Luxembourgish',
      languageCode: 'lb',
      nativeName: 'Lëtzebuergesch',
    },
    { language: 'Macedonian', languageCode: 'mk', nativeName: 'Македонски' },
    { language: 'Malagasy', languageCode: 'mg', nativeName: 'Malagasy' },
    { language: 'Malay', languageCode: 'ms', nativeName: 'Bahasa Melayu' },
    { language: 'Malayalam', languageCode: 'ml', nativeName: 'മലയാളം' },
    { language: 'Maltese', languageCode: 'mt', nativeName: 'Malti' },
    { language: 'Maori', languageCode: 'mi', nativeName: 'Te Reo Māori' },
    { language: 'Marathi', languageCode: 'mr', nativeName: 'मराठी' },
    { language: 'Mongolian', languageCode: 'mn', nativeName: 'Монгол' },
    { language: 'Nepali', languageCode: 'ne', nativeName: 'नेपाली' },
    { language: 'Norwegian', languageCode: 'no', nativeName: 'Norsk' },
    { language: 'Oriya', languageCode: 'or', nativeName: 'ଓଡ଼ିଆ' },
    { language: 'Pashto', languageCode: 'ps', nativeName: 'پښتو' },
    { language: 'Persian', languageCode: 'fa', nativeName: 'فارسی' },
    { language: 'Polish', languageCode: 'pl', nativeName: 'Polski' },
    { language: 'Portuguese', languageCode: 'pt', nativeName: 'Português' },
    { language: 'Punjabi', languageCode: 'pa', nativeName: 'ਪੰਜਾਬੀ' },
    { language: 'Romanian', languageCode: 'ro', nativeName: 'Română' },
    { language: 'Russian', languageCode: 'ru', nativeName: 'Русский' },
    { language: 'Samoan', languageCode: 'sm', nativeName: 'Gagana Sāmoa' },
    { language: 'Scots Gaelic', languageCode: 'gd', nativeName: 'Gàidhlig' },
    { language: 'Serbian', languageCode: 'sr', nativeName: 'Српски' },
    { language: 'Sesotho', languageCode: 'st', nativeName: 'Sesotho' },
    { language: 'Shona', languageCode: 'sn', nativeName: 'chiShona' },
    { language: 'Sindhi', languageCode: 'sd', nativeName: 'سنڌي' },
    { language: 'Sinhala', languageCode: 'si', nativeName: 'සිංහල' },
    { language: 'Slovak', languageCode: 'sk', nativeName: 'Slovenčina' },
    { language: 'Slovenian', languageCode: 'sl', nativeName: 'Slovenščina' },
    { language: 'Somali', languageCode: 'so', nativeName: 'Soomaali' },
    { language: 'Spanish', languageCode: 'es', nativeName: 'Español' },
    { language: 'Sundanese', languageCode: 'su', nativeName: 'Basa Sunda' },
    { language: 'Swahili', languageCode: 'sw', nativeName: 'Kiswahili' },
    { language: 'Swedish', languageCode: 'sv', nativeName: 'Svenska' },
    { language: 'Tagalog', languageCode: 'tl', nativeName: 'Tagalog' },
    { language: 'Tajik', languageCode: 'tg', nativeName: 'Тоҷикӣ' },
    { language: 'Tamil', languageCode: 'ta', nativeName: 'தமிழ்' },
    { language: 'Tatar', languageCode: 'tt', nativeName: 'Татарча' },
    { language: 'Telugu', languageCode: 'te', nativeName: 'తెలుగు' },
    { language: 'Thai', languageCode: 'th', nativeName: 'ไทย' },
    { language: 'Turkish', languageCode: 'tr', nativeName: 'Türkçe' },
    { language: 'Turkmen', languageCode: 'tk', nativeName: 'Türkmen' },
    { language: 'Ukrainian', languageCode: 'uk', nativeName: 'Українська' },
    { language: 'Urdu', languageCode: 'ur', nativeName: 'اردو' },
    { language: 'Uzbek', languageCode: 'uz', nativeName: 'Oʻzbekcha' },
    { language: 'Vietnamese', languageCode: 'vi', nativeName: 'Tiếng Việt' },
    { language: 'Welsh', languageCode: 'cy', nativeName: 'Cymraeg' },
    { language: 'Xhosa', languageCode: 'xh', nativeName: 'isiXhosa' },
    { language: 'Yiddish', languageCode: 'yi', nativeName: 'ייִדיש' },
    { language: 'Yoruba', languageCode: 'yo', nativeName: 'Yorùbá' },
    { language: 'Zulu', languageCode: 'zu', nativeName: 'isiZulu' },
  ];

  async run(dataSource: DataSource): Promise<void> {
    try {
      console.log('This is language: ', LanguageSeed.languages);
      const repository = dataSource.getRepository(LanguageEntity);
      await repository.insert(LanguageSeed.languages);
    } catch (error) {
      console.log('This is error: ', error);
    }
  }
}
